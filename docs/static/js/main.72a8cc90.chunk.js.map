{"version":3,"sources":["../../intern-project/video-player/videojs-thumbnail-sprite/dist/index.es.js","Player.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","convertSecondToTimeString","seconds","resultSecond","resultMinute","resultHour","parseInt","displayWarning","message","console","warn","generatePreview","player","controls","sprites","sprite","spriteIndex","dom","videojs","hoverPoint","optionIndex","progressCtrl","seekBar","mouseTimeDisplay","timeTooltip","mouseTimeDisplayEl","el","timeTooltipEl","parseFloat","style","left","duration","currentWidth","isNaN","i","length","sprite_1","start","interval","parent","image","createEl","src","url","imageWidth","naturalWidth","imageHeight","naturalHeight","columns","width","columnTop","Math","floor","height","columnLeft","controlsTop","getBoundingClientRect","top","seekBarTop","topOffset","max","color","border","margin","keys","map","key","value","setProperty","removeProperty","initializeThumbnailSprite","options","undefined","controlBar","sort","e1","e2","sortSprites","e1Start","e1End","e2Start","e2End","overlapStart","overlapEnd","checkOverlap","_a","checkOptions","on","addClass","ThumbnailSprite","_super","_this","this","ready","__","constructor","create","__extends","getPlugin","registerPlugin","Player","playerOptions","resources","sources","type","poster","videojsOptions","fluid","plugins","name","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.72a8cc90.chunk.js","sourcesContent":["import videojs from 'video.js';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nfunction sortSprites(sprites) {\n  sprites.sort(function (e1, e2) {\n    if (e1.start < e2.start) return -1;else if (e1.start === e2.start) return 0;else return 1;\n  });\n}\n\nfunction convertSecondToTimeString(seconds) {\n  var resultSecond = 0;\n  var resultMinute = 0;\n  var resultHour = 0; // 00:00:00 Format\n\n  if (seconds <= 0) {\n    return \"00:00:00\";\n  } else if (seconds < 60) {\n    // less than a minute\n    resultSecond = seconds;\n    resultSecond = resultSecond < 10 ? \"0\" + resultSecond : resultSecond;\n    return \"00:00:\" + resultSecond;\n  } else if (seconds < 3600) {\n    // less than an hour\n    resultMinute = parseInt(\"\" + seconds / 60);\n    resultMinute = resultMinute < 10 ? \"0\" + resultMinute : resultMinute;\n    resultSecond = seconds % 60;\n    resultSecond = resultSecond < 10 ? \"0\" + resultSecond : resultSecond;\n    return \"00:\" + resultMinute + \":\" + resultSecond;\n  } else {\n    // more than an hour\n    resultHour = parseInt(\"\" + seconds / 3600);\n    resultHour = resultHour < 10 ? \"0\" + resultHour : resultHour;\n    resultMinute = parseInt(\"\" + seconds % 3600 / 60);\n    resultMinute = resultMinute < 10 ? \"0\" + resultMinute : resultMinute;\n    resultSecond = parseInt(\"\" + seconds % 3600 % 60 % 60);\n    resultSecond = resultSecond < 10 ? \"0\" + resultSecond : resultSecond;\n    return resultHour + \":\" + resultMinute + \":\" + resultSecond;\n  }\n}\n\nfunction displayWarning(message) {\n  console.warn(\"[videojs-thumbnail-sprite] \" + message);\n}\n\nfunction checkOverlap(sprites) {\n  // Check if the sprite thumbnails have overlapping section among them,\n  // so that previews display their corresponding points of time correctly\n  for (var i = 0; i < sprites.length - 1; i++) {\n    var e1Start = sprites[i].start;\n    var e1End = e1Start + sprites[i].duration;\n    var e2Start = sprites[i + 1].start;\n    var e2End = e2Start + sprites[i + 1].duration;\n\n    if (e2Start < e1End) {\n      var overlapStart = e1Start;\n      var overlapEnd = Math.max(e1End, e2End); // If there is an overlap, generate warning on console\n\n      displayWarning(\"Provided thumbnail sprites have overlapping sections among them: [\" + convertSecondToTimeString(overlapStart) + \" ~ \" + convertSecondToTimeString(overlapEnd) + \"] Preview images may not match the corresponding point of time correctly.\");\n    }\n  }\n}\n\nfunction checkOptions(sprites) {\n  // Check if the sprite thumbnails have all required options properly,\n  // so that generating each previews executes correctly\n  for (var i = 0; i < sprites.length; i++) {\n    var _a = sprites[i],\n        start = _a.start,\n        duration = _a.duration,\n        interval = _a.interval,\n        width = _a.width,\n        height = _a.height,\n        url = _a.url; // # `start` should be zero or positive value\n\n    if (start < 0) {\n      displayWarning(\"`start` should be zero or positive value: [\" + convertSecondToTimeString(start) + \" ~ \" + convertSecondToTimeString(start + duration - 1) + \"] Preview images may not show as expected\");\n    } // # `width` and `height` should not be undefined\n\n\n    if (width === undefined || height === undefined) {\n      displayWarning(\"`width` and `height` should be provided: [\" + convertSecondToTimeString(start) + \" ~ \" + convertSecondToTimeString(start + duration - 1) + \"] Preview images may not show as expected\");\n    } // # `interval` should be able to fully cover entire duration\n\n\n    if (duration % interval !== 0) {\n      displayWarning(\"`duration` should be multiple of `interval` so that it can fully cover entire duration: [\" + convertSecondToTimeString(start) + \" ~ \" + convertSecondToTimeString(start + duration - 1) + \"] Preview images may not show as expected\");\n    }\n  }\n}\n\nfunction applyStyle(parent, style) {\n  var keys = Object.keys(style);\n  keys.map(function (key) {\n    var value = style[key];\n    if (value !== '') parent.style.setProperty(key, value);else // If key's value is empty, remove that style\n      parent.style.removeProperty(key);\n  });\n}\n\nfunction generatePreview(player, controls, sprites) {\n  var dom = videojs.dom;\n  var sprite; // 3-dimension approach\n\n  var hoverPoint = -1; // which point of time currently hovering\n\n  var optionIndex = -1; // which sprite image to use\n\n  var spriteIndex = -1; // which one inside a sprite image to use\n  // The case that Progress Control UI does not exist have already been filtered before this function is called\n\n  var progressCtrl = controls['progressControl']; // If there is no Seek Bar UI or Mouse Time Display UI,\n  // No Need to initialize the plugin\n\n  if (progressCtrl['seekBar'] === null) return;\n  var seekBar = progressCtrl['seekBar'];\n  if (seekBar['mouseTimeDisplay'] === null) return;\n  var mouseTimeDisplay = seekBar['mouseTimeDisplay'];\n  if (mouseTimeDisplay['timeTooltip'] === null) return;\n  var timeTooltip = mouseTimeDisplay['timeTooltip']; // The components used to calculate the current point of time\n\n  var mouseTimeDisplayEl = mouseTimeDisplay.el(); // The component to apply preview image on\n\n  var timeTooltipEl = timeTooltip.el(); // from mouse pointer's location, get the point of time\n\n  hoverPoint = parseFloat(mouseTimeDisplayEl.style.left);\n  hoverPoint = player.duration() * (hoverPoint / seekBar.currentWidth()); // from point of time currently hovering, get the corresponding preview image\n\n  if (!isNaN(hoverPoint)) {\n    // determine where the `hoverPoint` belongs\n    for (var i = 0; i < sprites.length; i++) {\n      var sprite_1 = sprites[i];\n\n      if (hoverPoint < sprite_1.start + sprite_1.duration) {\n        optionIndex = i;\n        break;\n      }\n    }\n  } else {\n    // if `hoverPoint` has a strange value, assign default value as 0\n    hoverPoint = 0;\n  } // if `optionIndex` is -1, it means corresponding thumbnail sprite does not exist\n  // so just use the first sprite\n  // calculate which image inside the sprite to use\n\n\n  spriteIndex = optionIndex !== -1 ? (hoverPoint - sprites[optionIndex].start) / sprites[optionIndex].interval : hoverPoint;\n  sprite = optionIndex !== -1 ? sprites[optionIndex] : sprites[0]; // create temporary `img` element to get the size of sprite thumbnail\n\n  var image = dom.createEl('img', {\n    src: sprite.url\n  });\n  var imageWidth = image.naturalWidth;\n  var imageHeight = image.naturalHeight; // get the coordinate to extract preview image from sprite thumbnail\n\n  var columns = imageWidth / sprite.width;\n  var columnTop = Math.floor(spriteIndex / columns) * -sprite.height;\n  var columnLeft = Math.floor(spriteIndex % columns) * -sprite.width; // get the position to display preview image\n\n  var controlsTop = dom.getBoundingClientRect(controls.el()).top;\n  var seekBarTop = dom.getBoundingClientRect(controls.el()).top;\n  var topOffset = -sprite.height - Math.max(0, seekBarTop - controlsTop); // apply image preview\n\n  applyStyle(timeTooltipEl, {\n    width: sprite.width + \"px\",\n    height: sprite.height + \"px\",\n    'background-image': \"url(\" + sprite.url + \")\",\n    'background-repeat': \"no-repeat\",\n    'background-position': columnLeft + \"px \" + columnTop + \"px\",\n    'background-size': imageWidth + \"px \" + imageHeight + \"px;\",\n    top: topOffset + \"px\",\n    color: \"#ffffff\",\n    'text-shadow': \"1px 1px #000000\",\n    border: \"1px 1px #000000\",\n    margin: \"0 1px\"\n  }); // TODO\n  // apply global style from `options` parameter\n}\n\nfunction initializeThumbnailSprite(player, options) {\n  // If there is no option provided,\n  // No need to initialize the plugin\n  if (options.sprites === undefined) return;\n  var sprites = options.sprites; // If there is no Control Bar UI or no Progress Control UI,\n  // No need to initialize the plugin\n\n  if (player.controlBar === undefined) return;\n  var controls = player.controlBar;\n  if (controls['progressControl'] === undefined) return;\n  var progressCtrl = controls['progressControl']; // Sort sprite images to prevent inappropriate order\n\n  sortSprites(sprites); // Check if the sprite thumbnails have overlapping section among them,\n  // so that previews display their corresponding points of time correctly\n\n  checkOverlap(sprites); // Check if the sprite thumbnails have all required options properly,\n  // so that generating each previews executes correctly\n\n  checkOptions(sprites); // Register event listener for hovering on progress control\n\n  progressCtrl.on(\"mousemove\", function () {\n    return generatePreview(player, controls, sprites);\n  });\n  progressCtrl.on(\"touchmove\", function () {\n    return generatePreview(player, controls, sprites);\n  }); // Add class to enable styling\n\n  player.addClass(\"vjs-sprite-thumbnails\");\n}\n\nvar Plugin = videojs.getPlugin('plugin');\n\nvar ThumbnailSprite =\n/** @class */\nfunction (_super) {\n  __extends(ThumbnailSprite, _super);\n\n  function ThumbnailSprite(player, options) {\n    var _this = _super.call(this, player) || this;\n\n    var emptyOptions = {\n      sprites: []\n    };\n    _this.options = options !== undefined ? options : emptyOptions; // When player instance is ready, initialize the plugin\n\n    _this.player.ready(function () {\n      initializeThumbnailSprite(_this.player, _this.options);\n    });\n\n    return _this;\n  }\n\n  return ThumbnailSprite;\n}(Plugin);\n\nvideojs.registerPlugin('thumbnailSprite', ThumbnailSprite);\n\n(function (ThumbnailSprite) {\n})(ThumbnailSprite || (ThumbnailSprite = {}));\n\nvar ThumbnailSprite$1 = ThumbnailSprite;\n\nexport default ThumbnailSprite$1;\n","import React from 'react';\nimport videojs from 'video.js';\nimport 'videojs-thumbnail-sprite';\nimport VREPlayer from 'videojs-react-enhanced';\n\nfunction Player(): JSX.Element {\n  const resources: VREPlayer.IResources = {\n    sources: [{\n      src: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n      type: 'video/mp4',\n    }],\n    poster: 'https://upload.wikimedia.org/wikipedia/commons/7/70/Big.Buck.Bunny.-.Opening.Screen.png'\n  }\n  const videojsOptions: VREPlayer.IVideoJsOptions = {\n    fluid: true,\n    plugins: [\n      {\n        name: 'thumbnailSprite',\n        options: {\n          sprites: [\n            {\n              url: 'https://raw.githubusercontent.com/cadenzah/videojs-thumbnail-sprite/master/examples/images/big-bunny-1-320-2-160-90.jpg',\n              start: 0,\n              duration: 320,\n              width: 160,\n              height: 90,\n              interval: 2,\n            },\n            {\n              url: 'https://raw.githubusercontent.com/cadenzah/videojs-thumbnail-sprite/master/examples/images/big-bunny-2-276-2-160-90.jpg',\n              start: 320,\n              duration: 276,\n              width: 160,\n              height: 90,\n              interval: 2,\n            },\n          ]\n        },\n      }\n    ]\n  }\n  return (\n    <VREPlayer\n      playerOptions={{\n        controls: true,\n      }}\n      resources={resources}\n      videojsOptions={videojsOptions}\n    />\n  );\n}\n\nexport default Player;\n","import React from 'react';\n// import Counter from './OldCounter';\nimport Counter from './Counter';\nimport MyForm from './MyForm';\nimport Player from './Player';\n\nfunction App() {\n  const onSubmit = (form: { name: string; description: string; }) => {\n    console.log(form);\n  };\n  return (\n    <Player />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}